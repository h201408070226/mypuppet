class neutron_controller{
	file{"/etc/mypuppet/neutron.sql":
		ensure=>file,
		source=>"puppet://puppetmaster/files/neutron.sql",
	}
	exec{"create new database neutron and grant":
		path=>"/usr/bin:/usr/sbin:/bin",
		command=>"mysql -u root < /etc/mypuppet/neutron.sql",
		provider=>shell,
	}
	file{"/etc/mypuppet/neutron.sh":
		ensure=>file,
		source=>"puppet://puppetmaster/files/neutron.sh",
	}
	exec{"sh /etc/mypuppet/neutron.sh":
		path=>"/usr/bin:/usr/sbin:/bin",
		command=>'sh /etc/mypuppet/neutron.sh',
	}
	package{"openstack-neutron":
		ensure=>installed,
		provider=>"yum",
	}
	package{"openstack-neutron-ml2":
		ensure=>installed,
		provider=>"yum",
	}
	package{"openstack-neutron-linuxbridge":
		ensure=>installed,
		provider=>"yum",
	}
	package{"ebtables":
		ensure=>installed,
		provider=>"yum",
	}
	file_line{"add connection to /etc/neutron/neutron.conf":
		path=>"/etc/neutron/neutron.conf",
		match=>"^\[database\]$",
		line=>"[database]
		\nconnection=mysql+pymysql://neutron:neutron_dbpass@puppetmaster/neutron",
	}
	file_line{"add message to [DEFAULT]":
		path=>"/etc/neutron/neutron.conf",
		match=>"^\[DEFAULT\]$",
		line=>"[DEFAULT]
		\ncore_plugin = ml2
		\nservice_plugins = router
		\nallow_overlapping_ips = True
		\nrpc_backend = rabbit
		\nauth_strategy = keystone
		\nnotify_nova_on_port_status_changes = True
		\nnotify_nova_on_port_data_changes = True",
	}
	file_line{"add message to [oslo_messaging_rabbit]":
		path=>"/etc/neutron/neutron.conf",
		match=>"^\[oslo_messaging_rabbit\]$",
		line=>"[oslo_messaging_rabbit]
		\nrabbit_host = puppetmaster
		\nrabbit_userid = openstack
		\nrabbit_password = RABBIT_PASS",
	}
	file_line{"add message to [keystone_authtoken]":
		path=>"/etc/neutron/neutron.conf",
		match=>"^\[keystone_authtoken\]$",
		line=>"[keystone_authtoken]
		\nauth_uri = http://puppetmaster:5000
		\nauth_url = http://puppetmaster:35357
		\nmemcached_servers = puppetmaster:11211
		\nauth_type = password
		\nproject_domain_name = default
		\nuser_domain_name = default
		\nproject_name = service
		\nusername = neutron
		\npassword = neutron",
	}
	file_line{"add message to [nova]":
		path=>"/etc/neutron/neutron.conf",
		match=>"^\[nova\]$",
		line=>"[nova]
		\nauth_url = http://puppetmaster:35357
		\nauth_type = password
		\nproject_domain_name = default
		\nuser_domain_name = default
		\nregion_name = RegionOne
		\nproject_name = service
		\nusername = nova
		\npassword = nova",
	}
	file_line{"add message to [oslo_concurrency]":
		path=>"/etc/neutron/neutron.conf",
		match=>"^\[oslo_concurrency\]$",
		line=>"[oslo_concurrency]
		\nlock_path = /var/lib/neutron/tmp",
	}
	file_line{"add message to /etc/neutron/plugins/ml2/ml2_conf.ini [ml2]":
		path=>"/etc/neutron/plugins/ml2/ml2_conf.ini",
		match=>"^\[ml2\]$",
		line=>"[ml2]
		\ntype_drivers = flat,vlan,vxlan
		\ntenant_network_types = vxlan
		\nmechanism_drivers = linuxbridge,l2population
		\nextension_drivers = port_security",
	}
	file_line{"add message to [ml2_type_flat]":
		path=>"/etc/neutron/plugins/ml2/ml2_conf.ini",
		match=>"^\[ml2_type_flat\]$",
		line=>"[ml2_type_flat]
		\nflat_networks = provider",
	}
	file_line{"add message to [ml2_type_vxlan]":
		path=>"/etc/neutron/plugins/ml2/ml2_conf.ini",
		match=>"^\[ml2_type_vxlan\]$",
		line=>"[ml2_type_vxlan]
		\nvni_ranges = 1:1000",
	}
	file_line{"add message to  /etc/neutron/plugins/ml2/ml2_conf.ini [securitygroup]":
		path=>"/etc/neutron/plugins/ml2/ml2_conf.ini",
		match=>"^\[securitygroup\]$",
		line=>"[securitygroup]
		\nenable_ipset = True",
	}
	file_line{"add message to /etc/neutron/plugins/ml2/linuxbridge_agent.ini":
		path=>"/etc/neutron/plugins/ml2/linuxbridge_agent.ini",
		match=>"^\[linux_bridge\]$",
		line=>"[linux_bridge]
		\nphysical_interface_mappings = provider:ens33",
	}
	file_line{"add message to [vxlan]":
		path=>"/etc/neutron/plugins/ml2/linuxbridge_agent.ini",
		match=>"^\[vxlan\]$",
		line=>"[vxlan]
		\nenable_vxlan = True
		\nlocal_ip = 192.168.188.132
		\nl2_population = True",
	}
	file_line{"add message to /etc/neutron/plugins/ml2/linuxbridge_agent.ini [securitygroup]":
		path=>"/etc/neutron/plugins/ml2/linuxbridge_agent.ini",
		match=>"^\[securitygroup\]$",
		line=>"[securitygroup]
		\nenable_security_group = True
		\nfirewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver",
	}
	file_line{"add message to /etc/neutron/l3_agent.ini":
		path=>"/etc/neutron/l3_agent.ini",
		match=>"^\[DEFAULT\]$",
		line=>"[DEFAULT]
		\ninterface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver
		\nexternal_network_bridge =",
	}
	file_line{"add message to /etc/neutron/dhcp_agent.ini":
		path=>"/etc/neutron/dhcp_agent.ini",
		match=>"^\[DEFAULT\]$",
		line=>"[DEFAULT]
		\ninterface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver
		\ndhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
		\nenable_isolated_metadata = True",
	}
	file_line{"add message to /etc/neutron/metadata_agent.ini":
		path=>"/etc/neutron/metadata_agent.ini",
		match=>"^\[DEFAULT\]$",
		line=>"[DEFAULT]
		\nnova_metadata_ip = puppetmaster
		\nmetadata_proxy_shared_secret = METADATA_SECRET",
	}
	file_line{"add message to /etc/nova/nova.conf":
		path=>"/etc/nova/nova.conf",
		match=>"^\[neutron\]$",
		line=>"[neutron]
		\nurl = http://puppetmaster:9696
		\nauth_url = http://puppetmaster:35357
		\nauth_type = password
		\nproject_domain_name = default
		\nuser_domain_name = default
		\nregion_name = RegionOne
		\nproject_name = service
		\nusername = neutron
		\npassword = 
		\nservice_metadata_proxy = True
		\nmetadata_proxy_shared_secret = METADATA_SECRET",
	}
	exec{"ln /etc/neutron/plugins/ml2/ml2_conf.ini":
		path=>"/usr/bin:/usr/sbin:/bin",
		command=>"ln -s /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugin.ini",
		provider=>shell,
	}
	exec{"neutron-db-manage neutron":
		path=>"/usr/sbin:/usr/bin:/bin",
		command=>'su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron',
		provider=>shell,
	}
	exec{"restart openstack-nova-api":
		path=>"/usr/bin:/usr/sbin:/bin",
		command=>"systemctl restart openstack-nova-api.service",
		provider=>shell,
	}
	service{"neutron-server":
		ensure=>"running",
		enable=>true,
		hasstatus=>true,
		hasrestart=>true,
	}
	service{"neutron-linuxbridge-agent":
		ensure=>"running",
		enable=>true,
		hasstatus=>true,
		hasrestart=>true,
	}
	service{"neutron-dhcp-agent":
		ensure=>"running",
		enable=>true,
		hasstatus=>true,
		hasrestart=>true,
	}
	service{"neutron-metadata-agent":
		ensure=>"running",
		enable=>true,
		hasstatus=>true,
		hasrestart=>true,
	}
	service{"neutron-l3-agent":
		ensure=>"running",
		enable=>true,
		hasstatus=>true,
		hasrestart=>true,
	}
	File['/etc/mypuppet/neutron.sql']->Exec['create new database neutron and grant']->File['/etc/mypuppet/neutron.sh']->
	Exec['sh /etc/mypuppet/neutron.sh']->Package['openstack-neutron']->Package['openstack-neutron-ml2']->
	Package['openstack-neutron-linuxbridge']->Package['ebtables']->File_line['add connection to /etc/neutron/neutron.conf']->
	File_line['add message to [DEFAULT]']->File_line['add message to [oslo_messaging_rabbit]']->File_line['add message to [keystone_authtoken]']->
	File_line['add message to [nova]']->File_line['add message to [oslo_concurrency]']->File_line['add message to /etc/neutron/plugins/ml2/ml2_conf.ini [ml2]']->
	File_line['add message to [ml2_type_flat]']->File_line['add message to [ml2_type_vxlan]']->File_line['add message to  /etc/neutron/plugins/ml2/ml2_conf.ini [securitygroup]']->
	File_line['add message to /etc/neutron/plugins/ml2/linuxbridge_agent.ini']->File_line['add message to [vxlan]']->File_line['add message to /etc/neutron/plugins/ml2/linuxbridge_agent.ini [securitygroup]']->
	File_line['add message to /etc/neutron/l3_agent.ini']->File_line['add message to /etc/neutron/dhcp_agent.ini']->File_line['add message to /etc/neutron/metadata_agent.ini']->
	File_line['add message to /etc/nova/nova.conf']->Exec['ln /etc/neutron/plugins/ml2/ml2_conf.ini']->Exec['neutron-db-manage neutron']->
	Exec['restart openstack-nova-api']->Service['neutron-server']->Service['neutron-linuxbridge-agent']->
	Service['neutron-dhcp-agent']->Service['neutron-metadata-agent']->Service['neutron-l3-agent']
}
