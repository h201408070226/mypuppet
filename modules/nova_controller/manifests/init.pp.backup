class nova_controller{
	$command1="GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY 'nova_dbpass'"
	$command2="GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY 'nova_dbpass'"
	$command3="GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY 'nova_dbpass'"
	$command4="GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY 'nova_dbpass'"
	exec{"create database nova_api":
		path=>"/usr/bin:/usr/sbin:/bin",
		command=>'mysql -u root -e "create database nova"', 
	}
	exec{"create database nova:"
		path=>"/usr/bin:/usr/sbin:/bin",
		command=>"mysql -u root -e 'create database nova_api'",
	}
	file{"/etc/nova_server.sh":
		ensure=>"file",
	  source=>"puppet://puppetmaser/files/nova_server.sh",	
	}
	exec{"sh /etc/nova_server.sh":
		path=>"/usr/sbin:/usr/bin:/bin",
		command=>"sh /etc/nova_server.sh",
	}
	package{"openstack-nova-api":
		ensure=>"installed",
		provider=>"yum",
	}
	package{"openstack-nova-conductor":
		ensure=>"installed",
		provider=>"yum",
	}
	package{"openstack-nova-console":
		ensure=>"installed",
		provider=>"yum",
	}
	peckage{"openstack-nova-novncproxy":
		ensure=>"installed",
		provider=>""yum",
	}
	package{"openstack-nova-scheduler":
		ensure=>"installed",
		provider=>"yum",
	}
	file_line{"add Default":
		path=>"/etc/nova/nova.conf",
		match=>"^\[DEFAULT\]$",
		line=>"[DEFAULT]\nenabled_apis=osapi_compute,metadata\nrpc_backend=rabbit\nauth_strategy=keystone\nmy_ip=puppetmaster\nuser_neutron=True\nfirewall_driver=nova.virt.firewall.NoopFirewallDriver",
	}
	file_line{"add connection to [api_database]":
		path=>"/etc/nova/nova.conf",
		match=>"^\[api\_database\]$",
		line=>"[api_database]\nconnection=mysql+pymysql://nova:nova_dbpass@puppetmaster/nova_api",
	}
	file_line{"add connection to [database]":
		path=>"/etc/nova/nova.conf",
		match=>"^\[database\]$",
		line=>"[database]\nconnection=mysql+pymysql://nova:nova_dbpass@puppetmaster/nova",
	}
	file_line{"add message to [oslo_messageing_rabbit]":
		path=>"/etc/nova/nova.conf",
		match=>"^\[oslo\_messageing\_rabbit\]$",
		line=>"[]oslo_messaging_rabbit]\nrabbit_host=puppetmaster\nrabbit_userid=openstack\nrabbit_password=RABBIT_PASS",
	}
	file_line{"add message to [keystone_authtoken]":
		path=>"/etc/nova/nova.conf",
		match=>"^\[keystone\_authtoken\]$",
		line=>"[keystone_authtoken]\nauth_uri=http://puppetmaster:5000\nauth_url=http://puppetmaster:35357\nmemcached_servers=puppetmaster:11211\nauth_type=password\nproject_domain_name=default\nuser_domain_name=default\nproject_name=service\nusername=nova\npassword=nova",
	}
	file_line{"add message [vnc]":
		path=>"/etc/nova/nova.conf",
		match=>"^\[vnc\]$",
		line=>"[vnc]\nvncserver_listen=$my_ip\nvnc_server_proxyclient_address=$my_ip",
	}
	file_line{"add message [glance]":
		path=>"/etc/nova/nova.conf",
		match=>"^\[glance\]$",
		line=>"[glance]\napi_servers=http://puppetmaster:9292",
	}
	file_line{"oslo_concurrency":
		path=>"/etc/nova/nova.conf",
		match=>"^[oslo\_concurrency\]$",
		line=>"[oslo_concurrency]\nlock_path=/var/lib/nova/tmp",
	}
	exec{"nova_manage api_db":
		path=>"/usr/bin:/usr/sbin:/bin',
		command=>'su -s /bin/sh -c "nova-manage api_db sync" nova',
	}
	exec{"nova_manage db":
		path=>"/usr/sbin:/usr/bin:/bin",
		command=>'su -s /bin/sh -c "nova-manage db sync" nova',
	}
	service{"openstack-nova-api":
		ensure=>"running",
		enable=>true,
		hasrestart=>true,
		harstatus=>true,
	}
	service{"openstack-nova-consoleauth":
		ensure=>"running",
		enable=>true,
		hasstatus=>true,
		hasrestart=>true,
	}
	service{"openstack-nova-scheduler":
		ensure=>"running",
		enable=>true,
		hasstatus=>true,
		hasrestart=>true,
	}
	service{"openstack-nova-conductor":
		ensure=>"running",
		enable=>true,
		hasstatus=>true,
		hasrestart=>true,
	}
	service{"openstack-nova-novncproxy":
		ensure=>"running",
		enable=>true,
		hasstatus=>true,
		hasrestart=>true,
	}
	

}
